import "package:flutter/material.dart";

class MaterialTheme {
  final TextTheme textTheme;

  const MaterialTheme(this.textTheme);

  ThemeData lightScheme() {
    return ThemeData(
      colorScheme: ColorScheme(
        brightness: Brightness.light,
        primary: Color(0xff656015),
        surfaceTint: Color(0xff656015),
        onPrimary: Color(0xffffffff),
        primaryContainer: Color(0xffede68c),
        onPrimaryContainer: Color(0xff4d4800),
        secondary: Color(0xff006874),
        onSecondary: Color(0xffffffff),
        secondaryContainer: Color(0xff9eeffd),
        onSecondaryContainer: Color(0xff004f58),
        tertiary: Color(0xff1c6586),
        onTertiary: Color(0xffffffff),
        tertiaryContainer: Color(0xffc4e7ff),
        onTertiaryContainer: Color(0xff004c69),
        error: Color(0xffba1a1a),
        onError: Color(0xffffffff),
        errorContainer: Color(0xffffdad6),
        onErrorContainer: Color(0xff93000a),
        surface: Color(0xfff7f9ff),
        onSurface: Color(0xff181c20),
        onSurfaceVariant: Color(0xff42474e),
        outline: Color(0xff72777f),
        outlineVariant: Color(0xffc2c7cf),
        shadow: Color(0xff000000),
        scrim: Color(0xff000000),
        inverseSurface: Color(0xff2d3135),
        inversePrimary: Color(0xffd0c973),
        primaryFixed: Color(0xffede68c),
        onPrimaryFixed: Color(0xff1e1c00),
        primaryFixedDim: Color(0xffd0c973),
        onPrimaryFixedVariant: Color(0xff4d4800),
        secondaryFixed: Color(0xff9eeffd),
        onSecondaryFixed: Color(0xff001f24),
        secondaryFixedDim: Color(0xff82d3e0),
        onSecondaryFixedVariant: Color(0xff004f58),
        tertiaryFixed: Color(0xffc4e7ff),
        onTertiaryFixed: Color(0xff001e2c),
        tertiaryFixedDim: Color(0xff90cef3),
        onTertiaryFixedVariant: Color(0xff004c69),
        surfaceDim: Color(0xffd8dae0),
        surfaceBright: Color(0xfff7f9ff),
        surfaceContainerLowest: Color(0xffffffff),
        surfaceContainerLow: Color(0xfff1f3f9),
        surfaceContainer: Color(0xffeceef4),
        surfaceContainerHigh: Color(0xffe6e8ee),
        surfaceContainerHighest: Color(0xffe0e2e8),
      ),textTheme: textTheme,
    );
  }

  ThemeData lightMediumContrastScheme() {
    return ThemeData(
      colorScheme: ColorScheme(
        brightness: Brightness.light,
        primary: Color(0xff3b3700),
        surfaceTint: Color(0xff656015),
        onPrimary: Color(0xffffffff),
        primaryContainer: Color(0xff746f23),
        onPrimaryContainer: Color(0xffffffff),
        secondary: Color(0xff003c44),
        onSecondary: Color(0xffffffff),
        secondaryContainer: Color(0xff187884),
        onSecondaryContainer: Color(0xffffffff),
        tertiary: Color(0xff003b52),
        onTertiary: Color(0xffffffff),
        tertiaryContainer: Color(0xff317495),
        onTertiaryContainer: Color(0xffffffff),
        error: Color(0xff740006),
        onError: Color(0xffffffff),
        errorContainer: Color(0xffcf2c27),
        onErrorContainer: Color(0xffffffff),
        surface: Color(0xfff7f9ff),
        onSurface: Color(0xff0e1115),
        onSurfaceVariant: Color(0xff31373d),
        outline: Color(0xff4e535a),
        outlineVariant: Color(0xff686d75),
        shadow: Color(0xff000000),
        scrim: Color(0xff000000),
        inverseSurface: Color(0xff2d3135),
        inversePrimary: Color(0xffd0c973),
        primaryFixed: Color(0xff746f23),
        onPrimaryFixed: Color(0xffffffff),
        primaryFixedDim: Color(0xff5b570a),
        onPrimaryFixedVariant: Color(0xffffffff),
        secondaryFixed: Color(0xff187884),
        onSecondaryFixed: Color(0xffffffff),
        secondaryFixedDim: Color(0xff005e68),
        onSecondaryFixedVariant: Color(0xffffffff),
        tertiaryFixed: Color(0xff317495),
        onTertiaryFixed: Color(0xffffffff),
        tertiaryFixedDim: Color(0xff095b7b),
        onTertiaryFixedVariant: Color(0xffffffff),
        surfaceDim: Color(0xffc4c6cc),
        surfaceBright: Color(0xfff7f9ff),
        surfaceContainerLowest: Color(0xffffffff),
        surfaceContainerLow: Color(0xfff1f3f9),
        surfaceContainer: Color(0xffe6e8ee),
        surfaceContainerHigh: Color(0xffdbdde2),
        surfaceContainerHighest: Color(0xffcfd2d7),
      ),textTheme: textTheme,
    );
  }

  ThemeData lightHighContrastScheme() {
    return ThemeData(
      colorScheme: ColorScheme(
        brightness: Brightness.light,
        primary: Color(0xff302d00),
        surfaceTint: Color(0xff656015),
        onPrimary: Color(0xffffffff),
        primaryContainer: Color(0xff4f4b00),
        onPrimaryContainer: Color(0xffffffff),
        secondary: Color(0xff003238),
        onSecondary: Color(0xffffffff),
        secondaryContainer: Color(0xff00515a),
        onSecondaryContainer: Color(0xffffffff),
        tertiary: Color(0xff003044),
        onTertiary: Color(0xffffffff),
        tertiaryContainer: Color(0xff004f6c),
        onTertiaryContainer: Color(0xffffffff),
        error: Color(0xff600004),
        onError: Color(0xffffffff),
        errorContainer: Color(0xff98000a),
        onErrorContainer: Color(0xffffffff),
        surface: Color(0xfff7f9ff),
        onSurface: Color(0xff000000),
        onSurfaceVariant: Color(0xff000000),
        outline: Color(0xff272d33),
        outlineVariant: Color(0xff444a50),
        shadow: Color(0xff000000),
        scrim: Color(0xff000000),
        inverseSurface: Color(0xff2d3135),
        inversePrimary: Color(0xffd0c973),
        primaryFixed: Color(0xff4f4b00),
        onPrimaryFixed: Color(0xffffffff),
        primaryFixedDim: Color(0xff373400),
        onPrimaryFixedVariant: Color(0xffffffff),
        secondaryFixed: Color(0xff00515a),
        onSecondaryFixed: Color(0xffffffff),
        secondaryFixedDim: Color(0xff00393f),
        onSecondaryFixedVariant: Color(0xffffffff),
        tertiaryFixed: Color(0xff004f6c),
        onTertiaryFixed: Color(0xffffffff),
        tertiaryFixedDim: Color(0xff00374d),
        onTertiaryFixedVariant: Color(0xffffffff),
        surfaceDim: Color(0xffb6b9be),
        surfaceBright: Color(0xfff7f9ff),
        surfaceContainerLowest: Color(0xffffffff),
        surfaceContainerLow: Color(0xffeff1f6),
        surfaceContainer: Color(0xffe0e2e8),
        surfaceContainerHigh: Color(0xffd2d4da),
        surfaceContainerHighest: Color(0xffc4c6cc),
      ),textTheme: textTheme,
    );
  }

  ThemeData darkScheme() {
    return ThemeData(
      colorScheme: ColorScheme(
        brightness: Brightness.dark,
        primary: Color(0xffd0c973),
        surfaceTint: Color(0xffd0c973),
        onPrimary: Color(0xff353200),
        primaryContainer: Color(0xff4d4800),
        onPrimaryContainer: Color(0xffede68c),
        secondary: Color(0xff82d3e0),
        onSecondary: Color(0xff00363d),
        secondaryContainer: Color(0xff004f58),
        onSecondaryContainer: Color(0xff9eeffd),
        tertiary: Color(0xff90cef3),
        onTertiary: Color(0xff00344a),
        tertiaryContainer: Color(0xff004c69),
        onTertiaryContainer: Color(0xffc4e7ff),
        error: Color(0xffffb4ab),
        onError: Color(0xff690005),
        errorContainer: Color(0xff93000a),
        onErrorContainer: Color(0xffffdad6),
        surface: Color(0xff101418),
        onSurface: Color(0xffe0e2e8),
        onSurfaceVariant: Color(0xffc2c7cf),
        outline: Color(0xff8c9199),
        outlineVariant: Color(0xff42474e),
        shadow: Color(0xff000000),
        scrim: Color(0xff000000),
        inverseSurface: Color(0xffe0e2e8),
        inversePrimary: Color(0xff656015),
        primaryFixed: Color(0xffede68c),
        onPrimaryFixed: Color(0xff1e1c00),
        primaryFixedDim: Color(0xffd0c973),
        onPrimaryFixedVariant: Color(0xff4d4800),
        secondaryFixed: Color(0xff9eeffd),
        onSecondaryFixed: Color(0xff001f24),
        secondaryFixedDim: Color(0xff82d3e0),
        onSecondaryFixedVariant: Color(0xff004f58),
        tertiaryFixed: Color(0xffc4e7ff),
        onTertiaryFixed: Color(0xff001e2c),
        tertiaryFixedDim: Color(0xff90cef3),
        onTertiaryFixedVariant: Color(0xff004c69),
        surfaceDim: Color(0xff101418),
        surfaceBright: Color(0xff36393e),
        surfaceContainerLowest: Color(0xff0b0e12),
        surfaceContainerLow: Color(0xff181c20),
        surfaceContainer: Color(0xff1c2024),
        surfaceContainerHigh: Color(0xff272a2f),
        surfaceContainerHighest: Color(0xff323539),
      ),textTheme: textTheme,
    );
  }

  ThemeData darkMediumContrastScheme() {
    return ThemeData(
      colorScheme: ColorScheme(
        brightness: Brightness.dark,
        primary: Color(0xffe7df87),
        surfaceTint: Color(0xffd0c973),
        onPrimary: Color(0xff292700),
        primaryContainer: Color(0xff999343),
        onPrimaryContainer: Color(0xff000000),
        secondary: Color(0xff98e9f7),
        onSecondary: Color(0xff002a30),
        secondaryContainer: Color(0xff499ca9),
        onSecondaryContainer: Color(0xff000000),
        tertiary: Color(0xffb6e2ff),
        onTertiary: Color(0xff00293a),
        tertiaryContainer: Color(0xff5998bb),
        onTertiaryContainer: Color(0xff000000),
        error: Color(0xffffd2cc),
        onError: Color(0xff540003),
        errorContainer: Color(0xffff5449),
        onErrorContainer: Color(0xff000000),
        surface: Color(0xff101418),
        onSurface: Color(0xffffffff),
        onSurfaceVariant: Color(0xffd8dde5),
        outline: Color(0xffadb2ba),
        outlineVariant: Color(0xff8c9198),
        shadow: Color(0xff000000),
        scrim: Color(0xff000000),
        inverseSurface: Color(0xffe0e2e8),
        inversePrimary: Color(0xff4e4a00),
        primaryFixed: Color(0xffede68c),
        onPrimaryFixed: Color(0xff131200),
        primaryFixedDim: Color(0xffd0c973),
        onPrimaryFixedVariant: Color(0xff3b3700),
        secondaryFixed: Color(0xff9eeffd),
        onSecondaryFixed: Color(0xff001417),
        secondaryFixedDim: Color(0xff82d3e0),
        onSecondaryFixedVariant: Color(0xff003c44),
        tertiaryFixed: Color(0xffc4e7ff),
        onTertiaryFixed: Color(0xff00131e),
        tertiaryFixedDim: Color(0xff90cef3),
        onTertiaryFixedVariant: Color(0xff003b52),
        surfaceDim: Color(0xff101418),
        surfaceBright: Color(0xff414549),
        surfaceContainerLowest: Color(0xff05080b),
        surfaceContainerLow: Color(0xff1a1e22),
        surfaceContainer: Color(0xff25282c),
        surfaceContainerHigh: Color(0xff2f3337),
        surfaceContainerHighest: Color(0xff3b3e42),
      ),textTheme: textTheme,
    );
  }

  ThemeData darkHighContrastScheme() {
    return ThemeData(
      colorScheme: ColorScheme(
        brightness: Brightness.dark,
        primary: Color(0xfffbf398),
        surfaceTint: Color(0xffd0c973),
        onPrimary: Color(0xff000000),
        primaryContainer: Color(0xffccc570),
        onPrimaryContainer: Color(0xff0d0c00),
        secondary: Color(0xffcdf7ff),
        onSecondary: Color(0xff000000),
        secondaryContainer: Color(0xff7ecfdc),
        onSecondaryContainer: Color(0xff000e10),
        tertiary: Color(0xffe1f2ff),
        onTertiary: Color(0xff000000),
        tertiaryContainer: Color(0xff8ccaef),
        onTertiaryContainer: Color(0xff000d15),
        error: Color(0xffffece9),
        onError: Color(0xff000000),
        errorContainer: Color(0xffffaea4),
        onErrorContainer: Color(0xff220001),
        surface: Color(0xff101418),
        onSurface: Color(0xffffffff),
        onSurfaceVariant: Color(0xffffffff),
        outline: Color(0xffecf0f8),
        outlineVariant: Color(0xffbec3cb),
        shadow: Color(0xff000000),
        scrim: Color(0xff000000),
        inverseSurface: Color(0xffe0e2e8),
        inversePrimary: Color(0xff4e4a00),
        primaryFixed: Color(0xffede68c),
        onPrimaryFixed: Color(0xff000000),
        primaryFixedDim: Color(0xffd0c973),
        onPrimaryFixedVariant: Color(0xff131200),
        secondaryFixed: Color(0xff9eeffd),
        onSecondaryFixed: Color(0xff000000),
        secondaryFixedDim: Color(0xff82d3e0),
        onSecondaryFixedVariant: Color(0xff001417),
        tertiaryFixed: Color(0xffc4e7ff),
        onTertiaryFixed: Color(0xff000000),
        tertiaryFixedDim: Color(0xff90cef3),
        onTertiaryFixedVariant: Color(0xff00131e),
        surfaceDim: Color(0xff101418),
        surfaceBright: Color(0xff4d5055),
        surfaceContainerLowest: Color(0xff000000),
        surfaceContainerLow: Color(0xff1c2024),
        surfaceContainer: Color(0xff2d3135),
        surfaceContainerHigh: Color(0xff383c40),
        surfaceContainerHighest: Color(0xff44474c),
      ),textTheme: textTheme,
    );
  }

  ThemeData theme(ColorScheme colorScheme) => ThemeData(
    useMaterial3: true,
    brightness: colorScheme.brightness,
    colorScheme: colorScheme,
    textTheme: textTheme.apply(
      bodyColor: colorScheme.onSurface,
      displayColor: colorScheme.onSurface,
    ),
    scaffoldBackgroundColor: colorScheme.surface,
    canvasColor: colorScheme.surface,
  );

  List<ExtendedColor> get extendedColors => [];
}

class ExtendedColor {
  final Color seed, value;
  final ColorFamily light;
  final ColorFamily lightHighContrast;
  final ColorFamily lightMediumContrast;
  final ColorFamily dark;
  final ColorFamily darkHighContrast;
  final ColorFamily darkMediumContrast;

  const ExtendedColor({
    required this.seed,
    required this.value,
    required this.light,
    required this.lightHighContrast,
    required this.lightMediumContrast,
    required this.dark,
    required this.darkHighContrast,
    required this.darkMediumContrast,
  });
}

class ColorFamily {
  const ColorFamily({
    required this.color,
    required this.onColor,
    required this.colorContainer,
    required this.onColorContainer,
  });

  final Color color;
  final Color onColor;
  final Color colorContainer;
  final Color onColorContainer;
}
